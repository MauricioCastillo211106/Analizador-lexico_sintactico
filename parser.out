Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS

Grammar

Rule 0     S' -> S
Rule 1     S -> V
Rule 2     S -> F
Rule 3     S -> CL
Rule 4     S -> IF
Rule 5     S -> M
Rule 6     valor -> N
Rule 7     valor -> cadena
Rule 8     valor -> ID
Rule 9     cadena -> CM ID CM
Rule 10    V -> AG TP ID OP valor
Rule 11    F -> VQ ID PA P PC LA V C LC
Rule 12    IF -> V VS PA CD PC LA V C LC NS LA SL LC
Rule 13    CD -> ID OP ON
Rule 14    P -> TP ID
Rule 15    CL -> PQ PA V PT ID OP ON PT ID IN PT PC LA V C LC
Rule 16    ON -> ID
Rule 17    ON -> N
Rule 18    M -> VQ SO PA PC LA V C LC
Rule 19    C -> IM PA ID PC
Rule 20    SL -> IM PA cadena PC

Terminals, with rules where they appear

AG                   : 10
AS                   : 
CM                   : 9 9
ID                   : 8 9 10 11 13 14 15 15 16 19
IM                   : 19 20
IN                   : 15
LA                   : 11 12 12 15 18
LC                   : 11 12 12 15 18
N                    : 6 17
NS                   : 12
OP                   : 10 13 15
PA                   : 11 12 15 18 19 20
PC                   : 11 12 15 18 19 20
PQ                   : 15
PT                   : 15 15 15
SO                   : 18
TP                   : 10 14
VQ                   : 11 18
VS                   : 12
error                : 

Nonterminals, with rules where they appear

C                    : 11 12 15 18
CD                   : 12
CL                   : 3
F                    : 2
IF                   : 4
M                    : 5
ON                   : 13 15
P                    : 11
S                    : 0
SL                   : 12
V                    : 1 11 12 12 15 15 18
cadena               : 7 20
valor                : 10

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . V
    (2) S -> . F
    (3) S -> . CL
    (4) S -> . IF
    (5) S -> . M
    (10) V -> . AG TP ID OP valor
    (11) F -> . VQ ID PA P PC LA V C LC
    (15) CL -> . PQ PA V PT ID OP ON PT ID IN PT PC LA V C LC
    (12) IF -> . V VS PA CD PC LA V C LC NS LA SL LC
    (18) M -> . VQ SO PA PC LA V C LC

    AG              shift and go to state 7
    VQ              shift and go to state 8
    PQ              shift and go to state 9

    S                              shift and go to state 1
    V                              shift and go to state 2
    F                              shift and go to state 3
    CL                             shift and go to state 4
    IF                             shift and go to state 5
    M                              shift and go to state 6

state 1

    (0) S' -> S .



state 2

    (1) S -> V .
    (12) IF -> V . VS PA CD PC LA V C LC NS LA SL LC

    $end            reduce using rule 1 (S -> V .)
    VS              shift and go to state 10


state 3

    (2) S -> F .

    $end            reduce using rule 2 (S -> F .)


state 4

    (3) S -> CL .

    $end            reduce using rule 3 (S -> CL .)


state 5

    (4) S -> IF .

    $end            reduce using rule 4 (S -> IF .)


state 6

    (5) S -> M .

    $end            reduce using rule 5 (S -> M .)


state 7

    (10) V -> AG . TP ID OP valor

    TP              shift and go to state 11


state 8

    (11) F -> VQ . ID PA P PC LA V C LC
    (18) M -> VQ . SO PA PC LA V C LC

    ID              shift and go to state 12
    SO              shift and go to state 13


state 9

    (15) CL -> PQ . PA V PT ID OP ON PT ID IN PT PC LA V C LC

    PA              shift and go to state 14


state 10

    (12) IF -> V VS . PA CD PC LA V C LC NS LA SL LC

    PA              shift and go to state 15


state 11

    (10) V -> AG TP . ID OP valor

    ID              shift and go to state 16


state 12

    (11) F -> VQ ID . PA P PC LA V C LC

    PA              shift and go to state 17


state 13

    (18) M -> VQ SO . PA PC LA V C LC

    PA              shift and go to state 18


state 14

    (15) CL -> PQ PA . V PT ID OP ON PT ID IN PT PC LA V C LC
    (10) V -> . AG TP ID OP valor

    AG              shift and go to state 7

    V                              shift and go to state 19

state 15

    (12) IF -> V VS PA . CD PC LA V C LC NS LA SL LC
    (13) CD -> . ID OP ON

    ID              shift and go to state 21

    CD                             shift and go to state 20

state 16

    (10) V -> AG TP ID . OP valor

    OP              shift and go to state 22


state 17

    (11) F -> VQ ID PA . P PC LA V C LC
    (14) P -> . TP ID

    TP              shift and go to state 24

    P                              shift and go to state 23

state 18

    (18) M -> VQ SO PA . PC LA V C LC

    PC              shift and go to state 25


state 19

    (15) CL -> PQ PA V . PT ID OP ON PT ID IN PT PC LA V C LC

    PT              shift and go to state 26


state 20

    (12) IF -> V VS PA CD . PC LA V C LC NS LA SL LC

    PC              shift and go to state 27


state 21

    (13) CD -> ID . OP ON

    OP              shift and go to state 28


state 22

    (10) V -> AG TP ID OP . valor
    (6) valor -> . N
    (7) valor -> . cadena
    (8) valor -> . ID
    (9) cadena -> . CM ID CM

    N               shift and go to state 31
    ID              shift and go to state 29
    CM              shift and go to state 33

    valor                          shift and go to state 30
    cadena                         shift and go to state 32

state 23

    (11) F -> VQ ID PA P . PC LA V C LC

    PC              shift and go to state 34


state 24

    (14) P -> TP . ID

    ID              shift and go to state 35


state 25

    (18) M -> VQ SO PA PC . LA V C LC

    LA              shift and go to state 36


state 26

    (15) CL -> PQ PA V PT . ID OP ON PT ID IN PT PC LA V C LC

    ID              shift and go to state 37


state 27

    (12) IF -> V VS PA CD PC . LA V C LC NS LA SL LC

    LA              shift and go to state 38


state 28

    (13) CD -> ID OP . ON
    (16) ON -> . ID
    (17) ON -> . N

    ID              shift and go to state 39
    N               shift and go to state 41

    ON                             shift and go to state 40

state 29

    (8) valor -> ID .

    VS              reduce using rule 8 (valor -> ID .)
    $end            reduce using rule 8 (valor -> ID .)
    PT              reduce using rule 8 (valor -> ID .)
    IM              reduce using rule 8 (valor -> ID .)


state 30

    (10) V -> AG TP ID OP valor .

    VS              reduce using rule 10 (V -> AG TP ID OP valor .)
    $end            reduce using rule 10 (V -> AG TP ID OP valor .)
    PT              reduce using rule 10 (V -> AG TP ID OP valor .)
    IM              reduce using rule 10 (V -> AG TP ID OP valor .)


state 31

    (6) valor -> N .

    VS              reduce using rule 6 (valor -> N .)
    $end            reduce using rule 6 (valor -> N .)
    PT              reduce using rule 6 (valor -> N .)
    IM              reduce using rule 6 (valor -> N .)


state 32

    (7) valor -> cadena .

    VS              reduce using rule 7 (valor -> cadena .)
    $end            reduce using rule 7 (valor -> cadena .)
    PT              reduce using rule 7 (valor -> cadena .)
    IM              reduce using rule 7 (valor -> cadena .)


state 33

    (9) cadena -> CM . ID CM

    ID              shift and go to state 42


state 34

    (11) F -> VQ ID PA P PC . LA V C LC

    LA              shift and go to state 43


state 35

    (14) P -> TP ID .

    PC              reduce using rule 14 (P -> TP ID .)


state 36

    (18) M -> VQ SO PA PC LA . V C LC
    (10) V -> . AG TP ID OP valor

    AG              shift and go to state 7

    V                              shift and go to state 44

state 37

    (15) CL -> PQ PA V PT ID . OP ON PT ID IN PT PC LA V C LC

    OP              shift and go to state 45


state 38

    (12) IF -> V VS PA CD PC LA . V C LC NS LA SL LC
    (10) V -> . AG TP ID OP valor

    AG              shift and go to state 7

    V                              shift and go to state 46

state 39

    (16) ON -> ID .

    PC              reduce using rule 16 (ON -> ID .)
    PT              reduce using rule 16 (ON -> ID .)


state 40

    (13) CD -> ID OP ON .

    PC              reduce using rule 13 (CD -> ID OP ON .)


state 41

    (17) ON -> N .

    PC              reduce using rule 17 (ON -> N .)
    PT              reduce using rule 17 (ON -> N .)


state 42

    (9) cadena -> CM ID . CM

    CM              shift and go to state 47


state 43

    (11) F -> VQ ID PA P PC LA . V C LC
    (10) V -> . AG TP ID OP valor

    AG              shift and go to state 7

    V                              shift and go to state 48

state 44

    (18) M -> VQ SO PA PC LA V . C LC
    (19) C -> . IM PA ID PC

    IM              shift and go to state 50

    C                              shift and go to state 49

state 45

    (15) CL -> PQ PA V PT ID OP . ON PT ID IN PT PC LA V C LC
    (16) ON -> . ID
    (17) ON -> . N

    ID              shift and go to state 39
    N               shift and go to state 41

    ON                             shift and go to state 51

state 46

    (12) IF -> V VS PA CD PC LA V . C LC NS LA SL LC
    (19) C -> . IM PA ID PC

    IM              shift and go to state 50

    C                              shift and go to state 52

state 47

    (9) cadena -> CM ID CM .

    VS              reduce using rule 9 (cadena -> CM ID CM .)
    $end            reduce using rule 9 (cadena -> CM ID CM .)
    PT              reduce using rule 9 (cadena -> CM ID CM .)
    IM              reduce using rule 9 (cadena -> CM ID CM .)
    PC              reduce using rule 9 (cadena -> CM ID CM .)


state 48

    (11) F -> VQ ID PA P PC LA V . C LC
    (19) C -> . IM PA ID PC

    IM              shift and go to state 50

    C                              shift and go to state 53

state 49

    (18) M -> VQ SO PA PC LA V C . LC

    LC              shift and go to state 54


state 50

    (19) C -> IM . PA ID PC

    PA              shift and go to state 55


state 51

    (15) CL -> PQ PA V PT ID OP ON . PT ID IN PT PC LA V C LC

    PT              shift and go to state 56


state 52

    (12) IF -> V VS PA CD PC LA V C . LC NS LA SL LC

    LC              shift and go to state 57


state 53

    (11) F -> VQ ID PA P PC LA V C . LC

    LC              shift and go to state 58


state 54

    (18) M -> VQ SO PA PC LA V C LC .

    $end            reduce using rule 18 (M -> VQ SO PA PC LA V C LC .)


state 55

    (19) C -> IM PA . ID PC

    ID              shift and go to state 59


state 56

    (15) CL -> PQ PA V PT ID OP ON PT . ID IN PT PC LA V C LC

    ID              shift and go to state 60


state 57

    (12) IF -> V VS PA CD PC LA V C LC . NS LA SL LC

    NS              shift and go to state 61


state 58

    (11) F -> VQ ID PA P PC LA V C LC .

    $end            reduce using rule 11 (F -> VQ ID PA P PC LA V C LC .)


state 59

    (19) C -> IM PA ID . PC

    PC              shift and go to state 62


state 60

    (15) CL -> PQ PA V PT ID OP ON PT ID . IN PT PC LA V C LC

    IN              shift and go to state 63


state 61

    (12) IF -> V VS PA CD PC LA V C LC NS . LA SL LC

    LA              shift and go to state 64


state 62

    (19) C -> IM PA ID PC .

    LC              reduce using rule 19 (C -> IM PA ID PC .)


state 63

    (15) CL -> PQ PA V PT ID OP ON PT ID IN . PT PC LA V C LC

    PT              shift and go to state 65


state 64

    (12) IF -> V VS PA CD PC LA V C LC NS LA . SL LC
    (20) SL -> . IM PA cadena PC

    IM              shift and go to state 67

    SL                             shift and go to state 66

state 65

    (15) CL -> PQ PA V PT ID OP ON PT ID IN PT . PC LA V C LC

    PC              shift and go to state 68


state 66

    (12) IF -> V VS PA CD PC LA V C LC NS LA SL . LC

    LC              shift and go to state 69


state 67

    (20) SL -> IM . PA cadena PC

    PA              shift and go to state 70


state 68

    (15) CL -> PQ PA V PT ID OP ON PT ID IN PT PC . LA V C LC

    LA              shift and go to state 71


state 69

    (12) IF -> V VS PA CD PC LA V C LC NS LA SL LC .

    $end            reduce using rule 12 (IF -> V VS PA CD PC LA V C LC NS LA SL LC .)


state 70

    (20) SL -> IM PA . cadena PC
    (9) cadena -> . CM ID CM

    CM              shift and go to state 33

    cadena                         shift and go to state 72

state 71

    (15) CL -> PQ PA V PT ID OP ON PT ID IN PT PC LA . V C LC
    (10) V -> . AG TP ID OP valor

    AG              shift and go to state 7

    V                              shift and go to state 73

state 72

    (20) SL -> IM PA cadena . PC

    PC              shift and go to state 74


state 73

    (15) CL -> PQ PA V PT ID OP ON PT ID IN PT PC LA V . C LC
    (19) C -> . IM PA ID PC

    IM              shift and go to state 50

    C                              shift and go to state 75

state 74

    (20) SL -> IM PA cadena PC .

    LC              reduce using rule 20 (SL -> IM PA cadena PC .)


state 75

    (15) CL -> PQ PA V PT ID OP ON PT ID IN PT PC LA V C . LC

    LC              shift and go to state 76


state 76

    (15) CL -> PQ PA V PT ID OP ON PT ID IN PT PC LA V C LC .

    $end            reduce using rule 15 (CL -> PQ PA V PT ID OP ON PT ID IN PT PC LA V C LC .)

